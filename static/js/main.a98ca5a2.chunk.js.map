{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TexInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","Link","to","defaultProps","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","children","Component","Consumer","Contact","showContactInfo","oneDeliteClick","delete","_this2","_this$props$contact","name","phone","email","onClick","style","cursor","bind","float","color","marginRight","Contacts","Fragment","Contact_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","TexInputGroup","EditContact","updContact","match","params","put","About","NotFound","App","context_Provider","HashRouter","basename","process","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a98ca5a2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n   <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n    <div className=\"container\">\n      <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n      <div>\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link to=\"/\" className=\"nav-link\">\n              <i className=\"fas fa-address-book\"></i> Home\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/contact/add\" className=\"nav-link\">\n              <i className=\"fas fa-plus-circle\"></i> Add\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/about\" className=\"nav-link\">\n              <i className=\"far fa-question-circle\"></i> About\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n   </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"Contacts Manager\"\n}\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n      case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, \n        ...state.contacts]\n      };\n      case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>  contact.id === action.payload.id ? (contact = action.payload) : contact)}\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n\n    dispatch: action => { \n      this.setState(state => reducer(state, action))\n    }\n  }\n\n  async componentDidMount() {\n    let res = await axios.get('https://jsonplaceholder.typicode.com/users');\n\n    this.setState({contacts: res.data})\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default class Contact extends Component {\n  state = {\n    showContactInfo: false\n  }\n\n  oneDeliteClick = async (id, dispatch) => {\n     await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    dispatch({type: 'DELETE_CONTACT', payload: id});\n  }\n\n  render() {\n\n    const {id, name, phone, email } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return(\n            <div className=\"card card-body mb-3\" >\n              <h4>{name}{' '}\n                <i \n                  onClick={() => this.setState({showContactInfo: !this.state.showContactInfo})} \n                  className=\"fas fa-sort-down\"\n                  style={{cursor:'pointer'}}\n                />\n                <i \n                  onClick={this.oneDeliteClick.bind(this, id, dispatch)}\n                  className=\"far fa-trash-alt\" \n                  style={{cursor:'pointer', float:'right', color:'red'}} \n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i \n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: 'pointer',\n                      float: 'right',\n                      color: 'black',\n                      marginRight: '1rem'\n                    }}\n                  ></i>\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\" >\n                <li className=\"list-group-item\">Email: {email}</li>\n                <li className=\"list-group-item\">Phone: {phone}</li>\n              </ul>\n              ): null}\n            </div>\n          )\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n\n  render() {\n    return(\n      <Consumer>\n        {value => {\n           const { contacts } = value;\n          return(\n          <React.Fragment>\n            <h1 className=\"display-4 mb-2\">\n              <span className=\"text-danger\">Contact </span>List\n            </h1>\n            {contacts.map(contact => (\n              <Contact key={contact.id} contact={contact} />\n            ))}\n          </React.Fragment>\n        )}}\n      </Consumer>\n    )\n  }\n}\n\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return(\n    <div className=\"form-group row\">\n      <label htmlFor={name} className=\"col-sm-2 col-form-label\">{label} </label>\n      <div className=\"col-sm-10\">\n        <input\n          placeholder={placeholder}\n          name={name}\n          type={type}\n          value={value}\n          className={classnames('form-control form-control-lg', {\n            'is-invalid': error\n          } )}\n          onChange={onChange}\n        />\n        {error && <div className=\"invalid-feedback \">{error}</div>}\n      </div>\n    </div>\n  )\n}\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextInputGroup;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TexInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {name: ''}\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const {name, email, phone } = this.state;\n\n    //Check for errors\n\n    if(name === '') {\n    this.setState({errors: {name: 'The Name is required!'}});\n    return;\n    }\n    if(email === '') {\n      this.setState({errors: {email: 'Email is required!'}});\n      return;\n    }\n    if(phone === '') {\n      this.setState({errors: {phone: 'Phone is required!'}});\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    }\n\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\n\n    //Clear state\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    //Add redirect at '/'\n    this.props.history.push('/');\n\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n   \n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn  btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TexInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {name: ''}\n  }\n\n  async componentDidMount() {\n    let { id } = this.props.match.params;\n    let res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    })\n  }\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    const {name, email, phone } = this.state;\n\n    //Check for errors\n    if(name === '') {\n    this.setState({errors: {name: 'The Name is required!'}});\n    return;\n    }\n    if(email === '') {\n      this.setState({errors: {email: 'Email is required!'}});\n      return;\n    }\n    if(phone === '') {\n      this.setState({errors: {phone: 'Phone is required!'}});\n      return;\n    }\n\n    let updContact = {\n      name,\n      email,\n      phone\n    }\n\n    let { id } = this.props.match.params;\n\n    let res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact)\n\n    dispatch({type: 'UPDATE_CONTACT', payload: res.data});\n\n    //Clear state\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    //Add redirect at '/'\n    this.props.history.push('/');\n\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n   \n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Edit Contact\"\n                    className=\"btn  btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default EditContact;","import React from 'react';\n\nexport default () => {\n  return(\n    <div>\n      <h1 className=\"display-4\">About contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404 Page Not Found</span>\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/layout/Header';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nimport { Provider } from './context';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Header />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route path=\"/about\" component={About} />\n                <Route path=\"/contact/add\" component={AddContact} />\n                <Route path=\"/contact/edit/:id\" component={EditContact} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}